// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: proto/kegiatan.proto

package kegiatan

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	KegiatanService_GetRencanaKegiatanList_FullMethodName    = "/proto.KegiatanService/GetRencanaKegiatanList"
	KegiatanService_CreateRencanaKegiatan_FullMethodName     = "/proto.KegiatanService/CreateRencanaKegiatan"
	KegiatanService_GetKegiatanPengikut_FullMethodName       = "/proto.KegiatanService/GetKegiatanPengikut"
	KegiatanService_GetKegiatanPengikutDetail_FullMethodName = "/proto.KegiatanService/GetKegiatanPengikutDetail"
	KegiatanService_GetKepanitian_FullMethodName             = "/proto.KegiatanService/GetKepanitian"
	KegiatanService_GetKegiatanSekolah_FullMethodName        = "/proto.KegiatanService/GetKegiatanSekolah"
	KegiatanService_GetItemAggaran_FullMethodName            = "/proto.KegiatanService/GetItemAggaran"
	KegiatanService_GetAcuanKegiatan_FullMethodName          = "/proto.KegiatanService/GetAcuanKegiatan"
	KegiatanService_GetRencanaKegiatan_FullMethodName        = "/proto.KegiatanService/GetRencanaKegiatan"
	KegiatanService_GetTargetSiswa_FullMethodName            = "/proto.KegiatanService/GetTargetSiswa"
	KegiatanService_GetBarang_FullMethodName                 = "/proto.KegiatanService/GetBarang"
)

// KegiatanServiceClient is the client API for KegiatanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KegiatanServiceClient interface {
	GetRencanaKegiatanList(ctx context.Context, in *GetRencanaKegiatanListRequest, opts ...grpc.CallOption) (*RencanaKegiatanListRes, error)
	CreateRencanaKegiatan(ctx context.Context, in *SetRencanaKegiatanRequest, opts ...grpc.CallOption) (*SetRencanaKegiatanResponse, error)
	GetKegiatanPengikut(ctx context.Context, in *GetKegiatanPengikutRequest, opts ...grpc.CallOption) (*GetKegiatanPengikutResponse, error)
	GetKegiatanPengikutDetail(ctx context.Context, in *GetKegiatanPengikutDetailRequest, opts ...grpc.CallOption) (*GetKegiatanPengikutDetailResponse, error)
	GetKepanitian(ctx context.Context, in *GetKepanitiaanRequest, opts ...grpc.CallOption) (*GetKepanitiaanResponse, error)
	GetKegiatanSekolah(ctx context.Context, in *GetKegiatanSekolahRequest, opts ...grpc.CallOption) (*GetKegiatanSekolahResponse, error)
	GetItemAggaran(ctx context.Context, in *GetItemAnggaranRequest, opts ...grpc.CallOption) (*GetItemAnggaranResponse, error)
	GetAcuanKegiatan(ctx context.Context, in *GetAcuanKegiatanRequest, opts ...grpc.CallOption) (*GetAcuanKegiatanResponse, error)
	GetRencanaKegiatan(ctx context.Context, in *GetRencanaKegiatanRequest, opts ...grpc.CallOption) (*GetRencanaKegiatanResponse, error)
	GetTargetSiswa(ctx context.Context, in *GetTargetSiswaRequest, opts ...grpc.CallOption) (*GetTargetSiswaResponse, error)
	GetBarang(ctx context.Context, in *GetBarangRequest, opts ...grpc.CallOption) (*GetBarangResponse, error)
}

type kegiatanServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKegiatanServiceClient(cc grpc.ClientConnInterface) KegiatanServiceClient {
	return &kegiatanServiceClient{cc}
}

func (c *kegiatanServiceClient) GetRencanaKegiatanList(ctx context.Context, in *GetRencanaKegiatanListRequest, opts ...grpc.CallOption) (*RencanaKegiatanListRes, error) {
	out := new(RencanaKegiatanListRes)
	err := c.cc.Invoke(ctx, KegiatanService_GetRencanaKegiatanList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) CreateRencanaKegiatan(ctx context.Context, in *SetRencanaKegiatanRequest, opts ...grpc.CallOption) (*SetRencanaKegiatanResponse, error) {
	out := new(SetRencanaKegiatanResponse)
	err := c.cc.Invoke(ctx, KegiatanService_CreateRencanaKegiatan_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetKegiatanPengikut(ctx context.Context, in *GetKegiatanPengikutRequest, opts ...grpc.CallOption) (*GetKegiatanPengikutResponse, error) {
	out := new(GetKegiatanPengikutResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetKegiatanPengikut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetKegiatanPengikutDetail(ctx context.Context, in *GetKegiatanPengikutDetailRequest, opts ...grpc.CallOption) (*GetKegiatanPengikutDetailResponse, error) {
	out := new(GetKegiatanPengikutDetailResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetKegiatanPengikutDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetKepanitian(ctx context.Context, in *GetKepanitiaanRequest, opts ...grpc.CallOption) (*GetKepanitiaanResponse, error) {
	out := new(GetKepanitiaanResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetKepanitian_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetKegiatanSekolah(ctx context.Context, in *GetKegiatanSekolahRequest, opts ...grpc.CallOption) (*GetKegiatanSekolahResponse, error) {
	out := new(GetKegiatanSekolahResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetKegiatanSekolah_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetItemAggaran(ctx context.Context, in *GetItemAnggaranRequest, opts ...grpc.CallOption) (*GetItemAnggaranResponse, error) {
	out := new(GetItemAnggaranResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetItemAggaran_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetAcuanKegiatan(ctx context.Context, in *GetAcuanKegiatanRequest, opts ...grpc.CallOption) (*GetAcuanKegiatanResponse, error) {
	out := new(GetAcuanKegiatanResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetAcuanKegiatan_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetRencanaKegiatan(ctx context.Context, in *GetRencanaKegiatanRequest, opts ...grpc.CallOption) (*GetRencanaKegiatanResponse, error) {
	out := new(GetRencanaKegiatanResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetRencanaKegiatan_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetTargetSiswa(ctx context.Context, in *GetTargetSiswaRequest, opts ...grpc.CallOption) (*GetTargetSiswaResponse, error) {
	out := new(GetTargetSiswaResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetTargetSiswa_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kegiatanServiceClient) GetBarang(ctx context.Context, in *GetBarangRequest, opts ...grpc.CallOption) (*GetBarangResponse, error) {
	out := new(GetBarangResponse)
	err := c.cc.Invoke(ctx, KegiatanService_GetBarang_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KegiatanServiceServer is the server API for KegiatanService service.
// All implementations must embed UnimplementedKegiatanServiceServer
// for forward compatibility
type KegiatanServiceServer interface {
	GetRencanaKegiatanList(context.Context, *GetRencanaKegiatanListRequest) (*RencanaKegiatanListRes, error)
	CreateRencanaKegiatan(context.Context, *SetRencanaKegiatanRequest) (*SetRencanaKegiatanResponse, error)
	GetKegiatanPengikut(context.Context, *GetKegiatanPengikutRequest) (*GetKegiatanPengikutResponse, error)
	GetKegiatanPengikutDetail(context.Context, *GetKegiatanPengikutDetailRequest) (*GetKegiatanPengikutDetailResponse, error)
	GetKepanitian(context.Context, *GetKepanitiaanRequest) (*GetKepanitiaanResponse, error)
	GetKegiatanSekolah(context.Context, *GetKegiatanSekolahRequest) (*GetKegiatanSekolahResponse, error)
	GetItemAggaran(context.Context, *GetItemAnggaranRequest) (*GetItemAnggaranResponse, error)
	GetAcuanKegiatan(context.Context, *GetAcuanKegiatanRequest) (*GetAcuanKegiatanResponse, error)
	GetRencanaKegiatan(context.Context, *GetRencanaKegiatanRequest) (*GetRencanaKegiatanResponse, error)
	GetTargetSiswa(context.Context, *GetTargetSiswaRequest) (*GetTargetSiswaResponse, error)
	GetBarang(context.Context, *GetBarangRequest) (*GetBarangResponse, error)
	mustEmbedUnimplementedKegiatanServiceServer()
}

// UnimplementedKegiatanServiceServer must be embedded to have forward compatible implementations.
type UnimplementedKegiatanServiceServer struct {
}

func (UnimplementedKegiatanServiceServer) GetRencanaKegiatanList(context.Context, *GetRencanaKegiatanListRequest) (*RencanaKegiatanListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRencanaKegiatanList not implemented")
}
func (UnimplementedKegiatanServiceServer) CreateRencanaKegiatan(context.Context, *SetRencanaKegiatanRequest) (*SetRencanaKegiatanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRencanaKegiatan not implemented")
}
func (UnimplementedKegiatanServiceServer) GetKegiatanPengikut(context.Context, *GetKegiatanPengikutRequest) (*GetKegiatanPengikutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKegiatanPengikut not implemented")
}
func (UnimplementedKegiatanServiceServer) GetKegiatanPengikutDetail(context.Context, *GetKegiatanPengikutDetailRequest) (*GetKegiatanPengikutDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKegiatanPengikutDetail not implemented")
}
func (UnimplementedKegiatanServiceServer) GetKepanitian(context.Context, *GetKepanitiaanRequest) (*GetKepanitiaanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKepanitian not implemented")
}
func (UnimplementedKegiatanServiceServer) GetKegiatanSekolah(context.Context, *GetKegiatanSekolahRequest) (*GetKegiatanSekolahResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKegiatanSekolah not implemented")
}
func (UnimplementedKegiatanServiceServer) GetItemAggaran(context.Context, *GetItemAnggaranRequest) (*GetItemAnggaranResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemAggaran not implemented")
}
func (UnimplementedKegiatanServiceServer) GetAcuanKegiatan(context.Context, *GetAcuanKegiatanRequest) (*GetAcuanKegiatanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAcuanKegiatan not implemented")
}
func (UnimplementedKegiatanServiceServer) GetRencanaKegiatan(context.Context, *GetRencanaKegiatanRequest) (*GetRencanaKegiatanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRencanaKegiatan not implemented")
}
func (UnimplementedKegiatanServiceServer) GetTargetSiswa(context.Context, *GetTargetSiswaRequest) (*GetTargetSiswaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTargetSiswa not implemented")
}
func (UnimplementedKegiatanServiceServer) GetBarang(context.Context, *GetBarangRequest) (*GetBarangResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBarang not implemented")
}
func (UnimplementedKegiatanServiceServer) mustEmbedUnimplementedKegiatanServiceServer() {}

// UnsafeKegiatanServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KegiatanServiceServer will
// result in compilation errors.
type UnsafeKegiatanServiceServer interface {
	mustEmbedUnimplementedKegiatanServiceServer()
}

func RegisterKegiatanServiceServer(s grpc.ServiceRegistrar, srv KegiatanServiceServer) {
	s.RegisterService(&KegiatanService_ServiceDesc, srv)
}

func _KegiatanService_GetRencanaKegiatanList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRencanaKegiatanListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetRencanaKegiatanList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetRencanaKegiatanList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetRencanaKegiatanList(ctx, req.(*GetRencanaKegiatanListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_CreateRencanaKegiatan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRencanaKegiatanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).CreateRencanaKegiatan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_CreateRencanaKegiatan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).CreateRencanaKegiatan(ctx, req.(*SetRencanaKegiatanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetKegiatanPengikut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKegiatanPengikutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetKegiatanPengikut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetKegiatanPengikut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetKegiatanPengikut(ctx, req.(*GetKegiatanPengikutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetKegiatanPengikutDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKegiatanPengikutDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetKegiatanPengikutDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetKegiatanPengikutDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetKegiatanPengikutDetail(ctx, req.(*GetKegiatanPengikutDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetKepanitian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKepanitiaanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetKepanitian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetKepanitian_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetKepanitian(ctx, req.(*GetKepanitiaanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetKegiatanSekolah_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKegiatanSekolahRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetKegiatanSekolah(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetKegiatanSekolah_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetKegiatanSekolah(ctx, req.(*GetKegiatanSekolahRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetItemAggaran_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemAnggaranRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetItemAggaran(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetItemAggaran_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetItemAggaran(ctx, req.(*GetItemAnggaranRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetAcuanKegiatan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAcuanKegiatanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetAcuanKegiatan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetAcuanKegiatan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetAcuanKegiatan(ctx, req.(*GetAcuanKegiatanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetRencanaKegiatan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRencanaKegiatanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetRencanaKegiatan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetRencanaKegiatan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetRencanaKegiatan(ctx, req.(*GetRencanaKegiatanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetTargetSiswa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTargetSiswaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetTargetSiswa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetTargetSiswa_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetTargetSiswa(ctx, req.(*GetTargetSiswaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KegiatanService_GetBarang_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBarangRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KegiatanServiceServer).GetBarang(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KegiatanService_GetBarang_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KegiatanServiceServer).GetBarang(ctx, req.(*GetBarangRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// KegiatanService_ServiceDesc is the grpc.ServiceDesc for KegiatanService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var KegiatanService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.KegiatanService",
	HandlerType: (*KegiatanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRencanaKegiatanList",
			Handler:    _KegiatanService_GetRencanaKegiatanList_Handler,
		},
		{
			MethodName: "CreateRencanaKegiatan",
			Handler:    _KegiatanService_CreateRencanaKegiatan_Handler,
		},
		{
			MethodName: "GetKegiatanPengikut",
			Handler:    _KegiatanService_GetKegiatanPengikut_Handler,
		},
		{
			MethodName: "GetKegiatanPengikutDetail",
			Handler:    _KegiatanService_GetKegiatanPengikutDetail_Handler,
		},
		{
			MethodName: "GetKepanitian",
			Handler:    _KegiatanService_GetKepanitian_Handler,
		},
		{
			MethodName: "GetKegiatanSekolah",
			Handler:    _KegiatanService_GetKegiatanSekolah_Handler,
		},
		{
			MethodName: "GetItemAggaran",
			Handler:    _KegiatanService_GetItemAggaran_Handler,
		},
		{
			MethodName: "GetAcuanKegiatan",
			Handler:    _KegiatanService_GetAcuanKegiatan_Handler,
		},
		{
			MethodName: "GetRencanaKegiatan",
			Handler:    _KegiatanService_GetRencanaKegiatan_Handler,
		},
		{
			MethodName: "GetTargetSiswa",
			Handler:    _KegiatanService_GetTargetSiswa_Handler,
		},
		{
			MethodName: "GetBarang",
			Handler:    _KegiatanService_GetBarang_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/kegiatan.proto",
}
